total_work.table$abb <- factor(total_work.table$abb, levels = c("OPT", "SCB", "CBN", "SN", "DSN", "BT"))
total_work.table["operation"] <- revalue(total_work.table$operation, c("rotation" = "Rotation",
"routing" = "Routing"))
total_work.table["dataset"] <- revalue(total_work.table$project,
c("cesar_mocfe" = "Mocfe",
"cesar_nekbone" = "Nekbone",
"cns_nospec" = "Nospec",
"multigrid" = "Multgrid"))
View(total_work.table)
total_work.table <- read.csv("./csv_data/hpc/total_work.csv")
total_work.table["abb"] <- revalue(total_work.table$project,
c("cbnet" = "CBN",
"seqcbnet" = "SCB",
"splaynet" = "SN",
"displaynet" = "DSN",
"optnet" = "OPT",
"simplenet" = "BT"))
total_work.table$abb <- factor(total_work.table$abb, levels = c("OPT", "SCB", "CBN", "SN", "DSN", "BT"))
total_work.table["operation"] <- revalue(total_work.table$operation, c("rotation" = "Rotation",
"routing" = "Routing"))
total_work.table["dataset"] <- revalue(total_work.table$dataset,
c("cesar_mocfe" = "Mocfe",
"cesar_nekbone" = "Nekbone",
"cns_nospec" = "Nospec",
"multigrid" = "Multgrid"))
total_work.table %>% filter(
dataset %in% c("Mocfe", "Nekbone", "Multigrid")) -> total_work.table
total_work.table %>% filter(
operation %in% c("Rotation", "Routing")) -> operations.table
# Init Ggplot Base Plot
total_work.plot <- ggplot(operations.table, aes(x = abb, y = value, fill = operation)) +#, col = abb)) +
geom_bar(position = "stack", stat = "identity", alpha = 0.8) +
facet_grid(. ~ dataset)#, scales = 'free', space = 'free', nrow = 2)
# Modify theme components -------------------------------------------
total_work.plot <- total_work.plot + theme(text = element_text(size = text_size),
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_text(size = y_title_size),
axis.text.x = element_text(size = x_text_size),
axis.text.y = element_text(size = y_text_size),
legend.title = element_blank(),
legend.position = c(0.18, 0.88))
total_work.plot <- total_work.plot + theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
labs(y = expression(paste("Work x", 10^{4}))) +
scale_color_manual(values = c(opt_color, scbn_color, cbn_color, sn_color, dsn_color, bt_color)) +
scale_fill_manual(values = c("#2A363B","#A8A7A7")) +
scale_y_continuous(breaks = seq(0, 20000000, 2000000), labels = function(x){paste0(x/1000000)})
plot(total_work.plot)
View(total_work.table)
total_work.table <- read.csv("./csv_data/hpc/total_work.csv")
View(total_work.table)
total_work.table["abb"] <- revalue(total_work.table$project,
c("cbnet" = "CBN",
"seqcbnet" = "SCB",
"splaynet" = "SN",
"displaynet" = "DSN",
"optnet" = "OPT",
"simplenet" = "BT"))
total_work.table$abb <- factor(total_work.table$abb, levels = c("OPT", "SCB", "CBN", "SN", "DSN", "BT"))
total_work.table["operation"] <- revalue(total_work.table$operation, c("rotation" = "Rotation",
"routing" = "Routing"))
total_work.table["dataset"] <- revalue(total_work.table$dataset,
c("cesar_mocfe" = "Mocfe",
"cesar_nekbone" = "Nekbone",
"cns_nospec" = "Nospec",
"multigrid" = "Multigrid"))
total_work.table %>% filter(
dataset %in% c("Mocfe", "Nekbone", "Multigrid")) -> total_work.table
total_work.table %>% filter(
operation %in% c("Rotation", "Routing")) -> operations.table
# Init Ggplot Base Plot
total_work.plot <- ggplot(operations.table, aes(x = abb, y = value, fill = operation)) +#, col = abb)) +
geom_bar(position = "stack", stat = "identity", alpha = 0.8) +
facet_grid(. ~ dataset)#, scales = 'free', space = 'free', nrow = 2)
# Modify theme components -------------------------------------------
total_work.plot <- total_work.plot + theme(text = element_text(size = text_size),
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_text(size = y_title_size),
axis.text.x = element_text(size = x_text_size),
axis.text.y = element_text(size = y_text_size),
legend.title = element_blank(),
legend.position = c(0.18, 0.88))
total_work.plot <- total_work.plot + theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
labs(y = expression(paste("Work x", 10^{4}))) +
scale_color_manual(values = c(opt_color, scbn_color, cbn_color, sn_color, dsn_color, bt_color)) +
scale_fill_manual(values = c("#2A363B","#A8A7A7")) +
scale_y_continuous(breaks = seq(0, 20000000, 2000000), labels = function(x){paste0(x/1000000)})
plot(total_work.plot)
IMG_height = 20
IMG_width = 60
text_size <- 30
x_title_size <- 25
y_title_size <- 25
x_text_size <- 25
y_text_size <- 25
# Init Ggplot Base Plot
total_work.plot <- ggplot(operations.table, aes(x = abb, y = value, fill = operation)) +#, col = abb)) +
geom_bar(position = "stack", stat = "identity", alpha = 0.8) +
facet_grid(. ~ dataset)#, scales = 'free', space = 'free', nrow = 2)
# Modify theme components -------------------------------------------
total_work.plot <- total_work.plot + theme(text = element_text(size = text_size),
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_text(size = y_title_size),
axis.text.x = element_text(size = x_text_size),
axis.text.y = element_text(size = y_text_size),
legend.title = element_blank(),
legend.position = c(0.18, 0.88))
total_work.plot <- total_work.plot + theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
labs(y = expression(paste("Work x", 10^{4}))) +
scale_color_manual(values = c(opt_color, scbn_color, cbn_color, sn_color, dsn_color, bt_color)) +
scale_fill_manual(values = c("#2A363B","#A8A7A7")) +
scale_y_continuous(breaks = seq(0, 20000000, 2000000), labels = function(x){paste0(x/1000000)})
plot(total_work.plot)
ggsave(filename = "./plots/hpc/total_work.png", units = "cm",
plot = total_work.plot, device = "png",  width = IMG_width, height = IMG_height, scale = scale_imgs)
IMG_height = 18
IMG_width = 40
# Init Ggplot Base Plot
total_work.plot <- ggplot(operations.table, aes(x = abb, y = value, fill = operation)) +#, col = abb)) +
geom_bar(position = "stack", stat = "identity", alpha = 0.8) +
facet_grid(. ~ dataset)#, scales = 'free', space = 'free', nrow = 2)
# Modify theme components -------------------------------------------
total_work.plot <- total_work.plot + theme(text = element_text(size = text_size),
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_text(size = y_title_size),
axis.text.x = element_text(size = x_text_size),
axis.text.y = element_text(size = y_text_size),
legend.title = element_blank(),
legend.position = c(0.18, 0.88))
total_work.plot <- total_work.plot + theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
labs(y = expression(paste("Work x", 10^{4}))) +
scale_color_manual(values = c(opt_color, scbn_color, cbn_color, sn_color, dsn_color, bt_color)) +
scale_fill_manual(values = c("#2A363B","#A8A7A7")) +
scale_y_continuous(breaks = seq(0, 20000000, 2000000), labels = function(x){paste0(x/1000000)})
plot(total_work.plot)
ggsave(filename = "./plots/hpc/total_work.png", units = "cm",
plot = total_work.plot, device = "png",  width = IMG_width, height = IMG_height, scale = scale_imgs)
IMG_height = 15
IMG_width = 40
# Init Ggplot Base Plot
total_work.plot <- ggplot(operations.table, aes(x = abb, y = value, fill = operation)) +#, col = abb)) +
geom_bar(position = "stack", stat = "identity", alpha = 0.8) +
facet_grid(. ~ dataset)#, scales = 'free', space = 'free', nrow = 2)
# Modify theme components -------------------------------------------
total_work.plot <- total_work.plot + theme(text = element_text(size = text_size),
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_text(size = y_title_size),
axis.text.x = element_text(size = x_text_size),
axis.text.y = element_text(size = y_text_size),
legend.title = element_blank(),
legend.position = c(0.18, 0.88))
total_work.plot <- total_work.plot + theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
labs(y = expression(paste("Work x", 10^{4}))) +
scale_color_manual(values = c(opt_color, scbn_color, cbn_color, sn_color, dsn_color, bt_color)) +
scale_fill_manual(values = c("#2A363B","#A8A7A7")) +
scale_y_continuous(breaks = seq(0, 20000000, 2000000), labels = function(x){paste0(x/1000000)})
plot(total_work.plot)
ggsave(filename = "./plots/hpc/total_work.png", units = "cm",
plot = total_work.plot, device = "png",  width = IMG_width, height = IMG_height, scale = scale_imgs)
throughput.table["abb"] <- revalue(throughput.table$project,
c("cbnet" = "CBN",
"seqcbnet" = "SCB",
"splaynet" = "SN",
"displaynet" = "DSN"))
throughput.table$abb <- factor(throughput.table$abb, levels = c("SCB", "CBN", "SN", "DSN"))
throughput.table["dataset"] <- revalue(throughput.table$dataset,
c("cesar_mocfe" = "Mocfe",
"cesar_nekbone" = "Nekbone",
"cns_nospec" = "Nospec",
"multigrid" = "Multigrid"))
throughput.table %>% filter(
dataset %in% c("Mocfe", "Nekbone", "Multigrid")) -> throughput.table
# Init Ggplot Base Plot
throughput.plot <- ggplot(throughput.table, aes(x = value, fill = abb)) +
geom_density(aes(y = ..count..), alpha = 0.5)
# Modify theme components -------------------------------------------
throughput.plot <- throughput.plot + theme(text = element_text(size = text_size),
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
axis.title.x = element_text(size = x_title_size),
axis.title.y = element_text(size = y_title_size),
axis.text.x = element_text(size = x_text_size),
axis.text.y = element_text(size = y_text_size),
legend.text = element_text(size = text_size),
legend.title = element_blank(),
legend.position = c(0.95, 0.8)) +
facet_grid(. ~ dataset)
throughput.plot <- throughput.plot + theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
labs(x = expression(paste("Time (rounds)", 10^6)), y = "Requests completed per round") +
scale_fill_manual(values = c(scbn_color, cbn_color, sn_color, dsn_color)) +
scale_y_continuous(breaks = seq(0, 5, 0.1)) +
scale_x_continuous(labels = function(x){paste0(x/1000000)})
plot(throughput.plot)
ggsave(filename = "./plots/hpc/throughput.png", units = "cm",
plot = throughput.plot, device = "png",  width = IMG_width, height = IMG_height, scale = scale_imgs)
# Init Ggplot Base Plot
throughput.plot <- ggplot(throughput.table, aes(x = value, fill = abb)) +
geom_density(aes(y = ..count..), alpha = 0.5)
# Modify theme components -------------------------------------------
throughput.plot <- throughput.plot + theme(text = element_text(size = text_size),
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
axis.title.x = element_text(size = x_title_size),
axis.title.y = element_text(size = y_title_size),
axis.text.x = element_text(size = x_text_size),
axis.text.y = element_text(size = y_text_size),
legend.text = element_text(size = text_size),
legend.title = element_blank(),
legend.position = c(0.85, 0.75)) +
facet_grid(. ~ dataset)
throughput.plot <- throughput.plot + theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
labs(x = expression(paste("Time (rounds)", 10^6)), y = "Requests completed per round") +
scale_fill_manual(values = c(scbn_color, cbn_color, sn_color, dsn_color)) +
scale_y_continuous(breaks = seq(0, 5, 0.1)) +
scale_x_continuous(labels = function(x){paste0(x/1000000)})
plot(throughput.plot)
ggsave(filename = "./plots/hpc/throughput.png", units = "cm",
plot = throughput.plot, device = "png",  width = IMG_width, height = IMG_height, scale = scale_imgs)
# Init Ggplot Base Plot
throughput.plot <- ggplot(throughput.table, aes(x = value, fill = abb)) +
geom_density(aes(y = ..count..), alpha = 0.5)
# Modify theme components -------------------------------------------
throughput.plot <- throughput.plot + theme(text = element_text(size = text_size),
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
axis.title.x = element_text(size = x_title_size),
axis.title.y = element_text(size = y_title_size),
axis.text.x = element_text(size = x_text_size),
axis.text.y = element_text(size = y_text_size),
legend.text = element_text(size = text_size),
legend.title = element_blank(),
legend.position = c(0.9, 0.75)) +
facet_grid(. ~ dataset)
throughput.plot <- throughput.plot + theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
labs(x = expression(paste("Time (rounds)", 10^6)), y = "Requests completed per round") +
scale_fill_manual(values = c(scbn_color, cbn_color, sn_color, dsn_color)) +
scale_y_continuous(breaks = seq(0, 5, 0.1)) +
scale_x_continuous(labels = function(x){paste0(x/1000000)})
plot(throughput.plot)
ggsave(filename = "./plots/hpc/throughput.png", units = "cm",
plot = throughput.plot, device = "png",  width = IMG_width, height = IMG_height, scale = scale_imgs)
clusters.table["abb"] <- revalue(clusters.table$project,
c("cbnet" = "CBN",
"seqcbnet" = "SCB",
"splaynet" = "SN",
"displaynet" = "DSN"))
clusters.table$abb <- factor(clusters.table$abb, levels = c("SCB", "CBN", "SN", "DSN"))
clusters.table["dataset"] <- revalue(clusters.table$dataset,
c("cesar_mocfe" = "Mocfe",
"cesar_nekbone" = "Nekbone",
"cns_nospec" = "Nospec",
"multigrid" = "Multigrid"))
clusters.table %>% filter(
dataset %in% c("Mocfe", "Nekbone", "Multigrid")) -> clusters.table
clusters.table %>% filter(
abb %in% c("CBN")) -> clusters.table
# Init Ggplot Base Plot
clusters.plot <- ggplot(clusters.table, aes(x = value, fill = abb)) +
geom_histogram(aes(y = ..count..), position = "dodge", binwidth = 1, alpha = 0.5, col = "#000000") +
facet_grid(. ~ dataset)
# Modify theme components -------------------------------------------
clusters.plot <- clusters.plot + theme(text = element_text(size = text_size),
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
axis.title.x = element_text(size = x_title_size),
axis.title.y = element_text(size = y_title_size),
axis.text.x = element_text(size = x_text_size),
axis.text.y = element_text(size = y_text_size),
legend.title = element_blank(),
legend.position = "none",
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
clusters.plot <- clusters.plot +
labs(x = "#Clusters", y = expression(paste("#Rounds x", 10^3))) +
scale_fill_manual(values = c(sn_color, dsn_color)) +
scale_y_continuous(lim = c(0, 900000), breaks = seq(0, 900000, 100000), labels = function(x){paste0(x/100000)}) +
coord_cartesian(xlim = c(0, 10))
View(clusters.table)
clusters.table["abb"] <- revalue(clusters.table$project,
c("cbnet" = "CBN",
"seqcbnet" = "SCB",
"splaynet" = "SN",
"displaynet" = "DSN"))
clusters.table$abb <- factor(clusters.table$abb, levels = c("SCB", "CBN", "SN", "DSN"))
clusters.table["dataset"] <- revalue(clusters.table$dataset,
c("cesar_mocfe" = "Mocfe",
"cesar_nekbone" = "Nekbone",
"cns_nospec" = "Nospec",
"multigrid" = "Multigrid"))
clusters.table %>% filter(
dataset %in% c("Mocfe", "Nekbone", "Multigrid")) -> clusters.table
clusters.table %>% filter(
abb %in% c("CBN")) -> clusters.table
# Init Ggplot Base Plot
clusters.plot <- ggplot(clusters.table, aes(x = value, fill = abb)) +
geom_histogram(aes(y = ..count..), position = "dodge", binwidth = 1, alpha = 0.5, col = "#000000") +
facet_grid(. ~ dataset)
# Modify theme components -------------------------------------------
clusters.plot <- clusters.plot + theme(text = element_text(size = text_size),
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
axis.title.x = element_text(size = x_title_size),
axis.title.y = element_text(size = y_title_size),
axis.text.x = element_text(size = x_text_size),
axis.text.y = element_text(size = y_text_size),
legend.title = element_blank(),
legend.position = "none",
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
clusters.plot <- clusters.plot +
labs(x = "#Clusters", y = expression(paste("#Rounds x", 10^3))) +
scale_fill_manual(values = c(sn_color, dsn_color)) +
scale_y_continuous(lim = c(0, 900000), breaks = seq(0, 900000, 100000), labels = function(x){paste0(x/100000)}) +
coord_cartesian(xlim = c(0, 10))
plot(clusters.plot)
ggsave(filename = "./plots/hpc/clusters.png", units = "cm",
plot = clusters.plot, device = "png",  width = IMG_width, height = IMG_height, scale = scale_imgs)
#setwd("C:/Users/oaugusto/Desktop/Plots/CBNet")
setwd("/home/oaugusto/Master/PlotsScripts/CBNet")
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(plyr)
# setup
options(scipen = 999)
theme_set(theme_bw())
total_work.table <- read.csv("./csv_data/facebook_pfab/total_work.csv")
makespan.table <- read.csv("./csv_data/facebook_pfab/total_time.csv")
clusters.table <- read.csv("./csv_data/facebook_pfab/cluster.csv")
throughput.table <- read.csv("./csv_data/facebook_pfab/throughput.csv")
#COLORS
cbn_color = "#325387"
cbn1 = "#325387"
cbn2 = "#325387"
scbn_color = "#6C5B7B"
scbn1 = "#6C5B7B"
scbn2 = "#6C5B7B"
sn_color = "#021C02"
sn1 = "#1A361A"
sn2 = "#021C02"
dsn_color = "#B53131"
dsn1 = "#CF4F4F"
dsn2 = "#B53131"
opt_color = "#87C8E6"
opt1 = "#BEDCEB"
opt2 = "#87C8E6"
bt_color = "#555555"
bt1 = "#555555"
bt2 = "#555555"
scale_imgs <- 1
IMG_height = 20
IMG_width = 20
text_size <- 30
x_title_size <- 25
y_title_size <- 25
x_text_size <- 25
y_text_size <- 25
total_work.table["abb"] <- revalue(total_work.table$project,
c("cbnet" = "CBN",
"seqcbnet" = "SCB",
"splaynet" = "SN",
"displaynet" = "DSN",
"optnet" = "OPT",
"simplenet" = "BT"))
total_work.table$abb <- factor(total_work.table$abb, levels = c("OPT", "SCB", "CBN", "SN", "DSN", "BT"))
total_work.table["operation"] <- revalue(total_work.table$operation, c("rotation" = "Rotation",
"routing" = "Routing"))
total_work.table %>% filter(
dataset %in% c("facebook")) -> total_work.table
total_work.table %>% filter(
operation %in% c("Rotation", "Routing")) -> operations.table
# Init Ggplot Base Plot
total_work.plot <- ggplot(operations.table, aes(x = abb, y = value, fill = operation)) +#, col = abb)) +
geom_bar(position = "stack", stat = "identity", alpha = 0.8) #+
# Modify theme components -------------------------------------------
total_work.plot <- total_work.plot + theme(text = element_text(size = text_size),
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_text(size = y_title_size),
axis.text.x = element_text(size = x_text_size),
axis.text.y = element_text(size = y_text_size),
legend.title = element_blank(),
legend.position = c(0.1, 0.9))
total_work.plot <- total_work.plot + theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
labs(y = expression(paste("Work x", 10^{6}))) +
scale_color_manual(values = c(opt_color, scbn_color, cbn_color, sn_color, dsn_color, bt_color)) +
scale_fill_manual(values = c("#2A363B","#A8A7A7")) +
scale_y_continuous(breaks = seq(0, 15000000, 2000000), labels = function(x){paste0(x/1000000)})
plot(total_work.plot)
ggsave(filename = "./plots/facebook_pfab/total_work.png", units = "cm",
plot = total_work.plot, device = "png",  width = IMG_width, height = IMG_height, scale = scale_imgs)
ggsave(filename = "./plots/facebook/total_work.png", units = "cm",
plot = total_work.plot, device = "png",  width = IMG_width, height = IMG_height, scale = scale_imgs)
# Init Ggplot Base Plot
total_work.plot <- ggplot(operations.table, aes(x = abb, y = value, fill = operation)) +#, col = abb)) +
geom_bar(position = "stack", stat = "identity", alpha = 0.8) #+
# Modify theme components -------------------------------------------
total_work.plot <- total_work.plot + theme(text = element_text(size = text_size),
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_text(size = y_title_size),
axis.text.x = element_text(size = x_text_size),
axis.text.y = element_text(size = y_text_size),
legend.title = element_blank(),
legend.position = c(0.2, 0.9))
total_work.plot <- total_work.plot + theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
labs(y = expression(paste("Work x", 10^{6}))) +
scale_color_manual(values = c(opt_color, scbn_color, cbn_color, sn_color, dsn_color, bt_color)) +
scale_fill_manual(values = c("#2A363B","#A8A7A7")) +
scale_y_continuous(breaks = seq(0, 15000000, 2000000), labels = function(x){paste0(x/1000000)})
plot(total_work.plot)
ggsave(filename = "./plots/facebook/total_work.png", units = "cm",
plot = total_work.plot, device = "png",  width = IMG_width, height = IMG_height, scale = scale_imgs)
throughput.table["abb"] <- revalue(throughput.table$project,
c("cbnet" = "CBN",
"seqcbnet" = "SCB",
"splaynet" = "SN",
"displaynet" = "DSN"))
throughput.table$abb <- factor(throughput.table$abb, levels = c("SCB", "CBN", "SN", "DSN"))
throughput.table %>% filter(
dataset %in% c("facebook")) -> throughput.table
# Init Ggplot Base Plot
throughput.plot <- ggplot(throughput.table, aes(x = value, fill = abb)) +
geom_density(aes(y = ..count..), alpha = 0.5)
# Modify theme components -------------------------------------------
throughput.plot <- throughput.plot + theme(text = element_text(size = text_size),
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
axis.title.x = element_text(size = x_title_size),
axis.title.y = element_text(size = y_title_size),
axis.text.x = element_text(size = x_text_size),
axis.text.y = element_text(size = y_text_size),
legend.text = element_text(size = text_size),
legend.title = element_blank(),
legend.position = c(0.85, 0.7)) #+
throughput.plot <- throughput.plot + theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
labs(x = expression(paste("Time (rounds)", 10^6)), y = "Requests completed per round") +
scale_fill_manual(values = c(scbn_color, cbn_color, sn_color, dsn_color)) +
scale_y_continuous(breaks = seq(0, 5, 0.1)) +
scale_x_continuous(labels = function(x){paste0(x/1000000)})
plot(throughput.plot)
ggsave(filename = "./plots/facebook/throughput.png", units = "cm",
plot = throughput.plot, device = "png",  width = IMG_width, height = IMG_height, scale = scale_imgs)
clusters.table["abb"] <- revalue(clusters.table$project,
c("cbnet" = "CBN",
"seqcbnet" = "SCB",
"splaynet" = "SN",
"displaynet" = "DSN"))
clusters.table$abb <- factor(clusters.table$abb, levels = c("SCB", "CBN", "SN", "DSN"))
clusters.table %>% filter(
dataset %in% c("facebook")) -> clusters.table
clusters.table %>% filter(
abb %in% c("CBN")) -> clusters.table
# Init Ggplot Base Plot
clusters.plot <- ggplot(clusters.table, aes(x = value, fill = abb)) +
geom_histogram(aes(y = ..count..), position = "dodge", binwidth = 1, alpha = 0.5, col = "#000000") #+
# Modify theme components -------------------------------------------
clusters.plot <- clusters.plot + theme(text = element_text(size = text_size),
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
axis.title.x = element_text(size = x_title_size),
axis.title.y = element_text(size = y_title_size),
axis.text.x = element_text(size = x_text_size),
axis.text.y = element_text(size = y_text_size),
legend.title = element_blank(),
legend.position = "none",
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
clusters.plot <- clusters.plot +
labs(x = "#Clusters", y = expression(paste("#Rounds x", 10^3))) +
scale_fill_manual(values = c(sn_color, dsn_color)) +
scale_y_continuous(lim = c(0, 900000), breaks = seq(0, 900000, 100000), labels = function(x){paste0(x/100000)}) +
coord_cartesian(xlim = c(0, 10))
plot(clusters.plot)
ggsave(filename = "./plots/facebook/clusters.png", units = "cm",
plot = clusters.plot, device = "png",  width = IMG_width, height = IMG_height, scale = scale_imgs)
