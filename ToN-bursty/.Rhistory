panel.grid.major = element_blank())
clusters.plot <- clusters.plot +
labs(x = "#Clusters", y = expression(paste("#Rounds x", 10^4))) +
scale_fill_manual(values = c(sn_color, dsn_color)) +
scale_y_continuous(labels = function(x){paste0(x/10000)})
plot(clusters.plot)
IMG_height = 15
IMG_width = 15
ggsave(filename = "./plots/facebook/clusters.pdf", units = "cm",
plot = clusters.plot, device = "pdf",  width = IMG_width, height = IMG_height, scale = 1.0)
View(clusters.table)
#setwd("C:/Users/oaugusto/Desktop/PlotScripts/ToN-bursty")
setwd("/home/oaugusto/CBNet/PlotsScripts/ToN-bursty")
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(plyr)
# setup
options(scipen = 999)
theme_set(theme_bw())
total_work.table <- read.csv("./csv_data/facebook/total_work.csv")
makespan.table <-read.csv("./csv_data/facebook/total_time.csv")
clusters.table <-read.csv("./csv_data/facebook/cluster.csv")
throughput.table <-read.csv("./csv_data/facebook/throughput.csv")
work_cdf.table <- read.csv("./csv_data/facebook/work_cdf.csv")
clusters.table["abb"] <- revalue(clusters.table$project,
c("splaynet" = "sn",
"displaynet" = "dsn"))
clusters.table$abb <- factor(clusters.table$abb, levels = c("sn", "dsn"))
clusters.table %>% filter(
abb %in% c("dsn")) -> clusters.table
# Init Ggplot Base Plot
clusters.plot <- ggplot(clusters.table, aes(x = value, fill = abb)) +
geom_histogram(aes(y = ..count..), position = "dodge", binwidth = 10000) +
# Add mean line
geom_vline(aes(xintercept=mean(value)), linetype="dashed")
# Modify theme components -------------------------------------------
clusters.plot <- clusters.plot + theme(text = element_text(size = 20),
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_blank(),
legend.position = c(0.8, 0.8),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
clusters.plot <- clusters.plot +
labs(x = "#Clusters", y = expression(paste("#Rounds x", 10^4))) +
scale_fill_manual(values = c(sn_color, dsn_color)) +
scale_y_continuous(labels = function(x){paste0(x/10000)})
#COLORS
sn_color = "#021C02"
sn1 = "#1A361A"
sn2 = "#021C02"
dsn_color = "#B53131"
dsn1 = "#CF4F4F"
dsn2 = "#B53131"
opt_color = "#87C8E6"
opt1 = "#BEDCEB"
opt2 = "#87C8E6"
bt_color = "#555555"
bt1 = "#555555"
bt2 = "#555555"
clusters.table["abb"] <- revalue(clusters.table$project,
c("splaynet" = "sn",
"displaynet" = "dsn"))
clusters.table$abb <- factor(clusters.table$abb, levels = c("sn", "dsn"))
clusters.table %>% filter(
abb %in% c("dsn")) -> clusters.table
# Init Ggplot Base Plot
clusters.plot <- ggplot(clusters.table, aes(x = value, fill = abb)) +
geom_histogram(aes(y = ..count..), position = "dodge", binwidth = 10000) +
# Add mean line
geom_vline(aes(xintercept=mean(value)), linetype="dashed")
# Modify theme components -------------------------------------------
clusters.plot <- clusters.plot + theme(text = element_text(size = 20),
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_blank(),
legend.position = c(0.8, 0.8),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
clusters.plot <- clusters.plot +
labs(x = "#Clusters", y = expression(paste("#Rounds x", 10^4))) +
scale_fill_manual(values = c(sn_color, dsn_color)) +
scale_y_continuous(labels = function(x){paste0(x/10000)})
IMG_height = 15
IMG_width = 15
ggsave(filename = "./plots/facebook/clusters.pdf", units = "cm",
plot = clusters.plot, device = "pdf",  width = IMG_width, height = IMG_height, scale = 1.0)
clusters.table["abb"] <- revalue(clusters.table$project,
c("splaynet" = "sn",
"displaynet" = "dsn"))
clusters.table$abb <- factor(clusters.table$abb, levels = c("sn", "dsn"))
clusters.table %>% filter(
abb %in% c("dsn")) -> clusters.table
# Init Ggplot Base Plot
clusters.plot <- ggplot(clusters.table, aes(x = value, fill = abb)) +
geom_histogram(aes(y = ..count..), position = "dodge", binwidth = 10) +
# Add mean line
geom_vline(aes(xintercept=mean(value)), linetype="dashed")
# Modify theme components -------------------------------------------
clusters.plot <- clusters.plot + theme(text = element_text(size = 20),
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_blank(),
legend.position = c(0.8, 0.8),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
clusters.plot <- clusters.plot +
labs(x = "#Clusters", y = expression(paste("#Rounds x", 10^4))) +
scale_fill_manual(values = c(sn_color, dsn_color)) +
scale_y_continuous(labels = function(x){paste0(x/10000)})
IMG_height = 15
IMG_width = 15
ggsave(filename = "./plots/facebook/clusters.pdf", units = "cm",
plot = clusters.plot, device = "pdf",  width = IMG_width, height = IMG_height, scale = 1.0)
clusters.table["abb"] <- revalue(clusters.table$project,
c("splaynet" = "sn",
"displaynet" = "dsn"))
clusters.table$abb <- factor(clusters.table$abb, levels = c("sn", "dsn"))
clusters.table %>% filter(
abb %in% c("dsn")) -> clusters.table
# Init Ggplot Base Plot
clusters.plot <- ggplot(clusters.table, aes(x = value, fill = abb)) +
geom_histogram(aes(y = ..count..), position = "dodge", binwidth = 1) +
# Add mean line
geom_vline(aes(xintercept=mean(value)), linetype="dashed")
# Modify theme components -------------------------------------------
clusters.plot <- clusters.plot + theme(text = element_text(size = 20),
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_blank(),
legend.position = c(0.8, 0.8),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
clusters.plot <- clusters.plot +
labs(x = "#Clusters", y = expression(paste("#Rounds x", 10^4))) +
scale_fill_manual(values = c(sn_color, dsn_color)) +
scale_y_continuous(labels = function(x){paste0(x/10000)})
plot(clusters.plot)
clusters.table["abb"] <- revalue(clusters.table$project,
c("splaynet" = "sn",
"displaynet" = "dsn"))
clusters.table$abb <- factor(clusters.table$abb, levels = c("sn", "dsn"))
clusters.table %>% filter(
abb %in% c("dsn")) -> clusters.table
# Init Ggplot Base Plot
clusters.plot <- ggplot(clusters.table, aes(x = value, fill = abb)) +
geom_histogram(aes(y = ..count..), position = "dodge", binwidth = 1) +
# Add mean line
geom_vline(aes(xintercept=mean(value)), linetype="dashed")
# Modify theme components -------------------------------------------
clusters.plot <- clusters.plot + theme(text = element_text(size = 20),
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_blank(),
legend.position = c(0.8, 0.8),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
clusters.plot <- clusters.plot +
labs(x = "#Clusters", y = expression(paste("#Rounds x", 10^4))) +
scale_fill_manual(values = c(sn_color, dsn_color)) +
scale_y_continuous(labels = function(x){paste0(x/10000)})
IMG_height = 15
IMG_width = 15
ggsave(filename = "./plots/facebook/clusters.pdf", units = "cm",
plot = clusters.plot, device = "pdf",  width = IMG_width, height = IMG_height, scale = 1.0)
#setwd("C:/Users/oaugusto/Desktop/PlotScripts/ToN-bursty")
setwd("/home/oaugusto/CBNet/PlotsScripts/ToN-bursty")
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(plyr)
# setup
options(scipen = 999)
theme_set(theme_bw())
total_work.table <- read.csv("./csv_data/facebook/total_work.csv")
makespan.table <-read.csv("./csv_data/facebook/total_time.csv")
clusters.table <-read.csv("./csv_data/facebook/cluster.csv")
throughput.table <-read.csv("./csv_data/facebook/throughput.csv")
work_cdf.table <- read.csv("./csv_data/facebook/work_cdf.csv")
#COLORS
sn_color = "#021C02"
sn1 = "#1A361A"
sn2 = "#021C02"
dsn_color = "#B53131"
dsn1 = "#CF4F4F"
dsn2 = "#B53131"
opt_color = "#87C8E6"
opt1 = "#BEDCEB"
opt2 = "#87C8E6"
bt_color = "#555555"
bt1 = "#555555"
bt2 = "#555555"
clusters.table["abb"] <- revalue(clusters.table$project,
c("splaynet" = "sn",
"displaynet" = "dsn"))
clusters.table$abb <- factor(clusters.table$abb, levels = c("sn", "dsn"))
clusters.table %>% filter(
abb %in% c("dsn")) -> clusters.table
# Init Ggplot Base Plot
clusters.plot <- ggplot(clusters.table, aes(x = value, fill = abb)) +
geom_histogram(aes(y = ..count..), position = "dodge", binwidth = 0.5) +
# Add mean line
geom_vline(aes(xintercept=mean(value)), linetype="dashed")
# Modify theme components -------------------------------------------
clusters.plot <- clusters.plot + theme(text = element_text(size = 20),
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
axis.title.x = element_text(size = 25),
axis.title.y = element_text(size = 25),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
legend.text = element_text(size = 20),
legend.title = element_blank(),
legend.position = "none",
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
clusters.plot <- clusters.plot +
labs(x = "#Clusters", y = expression(paste("#Rounds x", 10^4))) +
scale_fill_manual(values = c(sn_color, dsn_color)) +
scale_y_continuous(labels = function(x){paste0(x/10000)})
IMG_height = 15
IMG_width = 15
ggsave(filename = "./plots/facebook/clusters.pdf", units = "cm",
plot = clusters.plot, device = "pdf",  width = IMG_width, height = IMG_height, scale = 1.0)
#setwd("C:/Users/oaugusto/Desktop/PlotScripts/ToN-bursty")
setwd("/home/oaugusto/CBNet/PlotsScripts/ToN-bursty")
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(plyr)
# setup
options(scipen = 999)
theme_set(theme_bw())
total_work.table <- read.csv("./csv_data/normal/total_work.csv")
makespan.table <-read.csv("./csv_data/normal/total_time.csv")
clusters.table <-read.csv("./csv_data/normal/cluster.csv")
throughput.table <-read.csv("./csv_data/normal/throughput.csv")
work_cdf.table <- read.csv("./csv_data/normal/work_cdf.csv")
#COLORS
sn_color = "#021C02"
sn1 = "#1A361A"
sn2 = "#021C02"
dsn_color = "#B53131"
dsn1 = "#CF4F4F"
dsn2 = "#B53131"
opt_color = "#87C8E6"
opt1 = "#BEDCEB"
opt2 = "#87C8E6"
bt_color = "#555555"
bt1 = "#555555"
bt2 = "#555555"
clusters.table["abb"] <- revalue(clusters.table$project,
c("splaynet" = "sn",
"displaynet" = "dsn"))
clusters.table$abb <- factor(clusters.table$abb, levels = c("sn", "dsn"))
clusters.table %>% filter(
std %in% c(1.6)) -> clusters.table
clusters.table %>% filter(
size %in% c(1024)) -> clusters.table
clusters.table %>% filter(
abb %in% c("dsn")) -> clusters.table
# Init Ggplot Base Plot
clusters.plot <- ggplot(clusters.table, aes(x = value, fill = abb)) +
geom_histogram(aes(y = ..count..), position = "dodge", binwidth = 0.5) +
# Add mean line
geom_vline(aes(xintercept=mean(value)), linetype="dashed")
# Modify theme components -------------------------------------------
clusters.plot <- clusters.plot + theme(text = element_text(size = 20),
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
axis.title.x = element_text(size = 25),
axis.title.y = element_text(size = 25),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
legend.text = element_text(size = 20),
legend.title = element_blank(),
legend.position = "none",
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
clusters.plot <- clusters.plot +
labs(x = "#Clusters", y = expression(paste("#Rounds x", 10^4))) +
scale_fill_manual(values = c(sn_color, dsn_color)) +
scale_y_continuous(breaks = seq(0, 400000, 10000), labels = function(x){paste0(x/10000)})
IMG_height = 15
IMG_width = 15
ggsave(filename = "./plots/normal/clusters.pdf", units = "cm",
plot = clusters.plot, device = "pdf",  width = IMG_width, height = IMG_height, scale = 1.0)
#setwd("C:/Users/oaugusto/Desktop/PlotScripts/ToN-bursty")
setwd("/home/oaugusto/CBNet/PlotsScripts/ToN-bursty")
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(plyr)
# setup
options(scipen = 999)
theme_set(theme_bw())
total_work.table <- read.csv("./csv_data/normal/total_work.csv")
makespan.table <-read.csv("./csv_data/normal/total_time.csv")
clusters.table <-read.csv("./csv_data/normal/cluster.csv")
throughput.table <-read.csv("./csv_data/normal/throughput.csv")
work_cdf.table <- read.csv("./csv_data/normal/work_cdf.csv")
#COLORS
sn_color = "#021C02"
sn1 = "#1A361A"
sn2 = "#021C02"
dsn_color = "#B53131"
dsn1 = "#CF4F4F"
dsn2 = "#B53131"
opt_color = "#87C8E6"
opt1 = "#BEDCEB"
opt2 = "#87C8E6"
bt_color = "#555555"
bt1 = "#555555"
bt2 = "#555555"
clusters.table["abb"] <- revalue(clusters.table$project,
c("splaynet" = "sn",
"displaynet" = "dsn"))
clusters.table$abb <- factor(clusters.table$abb, levels = c("sn", "dsn"))
clusters.table %>% filter(
std %in% c(1.6)) -> clusters.table
clusters.table %>% filter(
size %in% c(1024)) -> clusters.table
clusters.table %>% filter(
abb %in% c("dsn")) -> clusters.table
# Init Ggplot Base Plot
clusters.plot <- ggplot(clusters.table, aes(x = value, fill = abb)) +
geom_histogram(aes(y = ..count..), position = "dodge", binwidth = 1, alpha = 0.5) +
# Add mean line
geom_vline(aes(xintercept=mean(value)), linetype="dashed")
# Modify theme components -------------------------------------------
clusters.plot <- clusters.plot + theme(text = element_text(size = 20),
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
axis.title.x = element_text(size = 25),
axis.title.y = element_text(size = 25),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
legend.text = element_text(size = 20),
legend.title = element_blank(),
legend.position = "none",
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
clusters.plot <- clusters.plot +
labs(x = "#Clusters", y = expression(paste("#Rounds x", 10^4))) +
scale_fill_manual(values = c(sn_color, dsn_color)) +
scale_y_continuous(breaks = seq(0, 400000, 10000), labels = function(x){paste0(x/10000)})
plot(clusters.plot)
IMG_height = 15
IMG_width = 15
ggsave(filename = "./plots/normal/clusters.pdf", units = "cm",
plot = clusters.plot, device = "pdf",  width = IMG_width, height = IMG_height, scale = 1.0)
setwd("/home/oaugusto/CBNet/PlotsScripts/ToN-bursty")
################################## Libraries ###################################
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(plyr)
# setup
options(scipen = 999)
theme_set(theme_bw())
############################# Reading tables  ##################################
total_work.table <- read.csv("./csv_data/facebook/total_work.csv")
makespan.table <-read.csv("./csv_data/facebook/total_time.csv")
clusters.table <-read.csv("./csv_data/facebook/cluster.csv")
throughput.table <-read.csv("./csv_data/facebook/throughput.csv")
work_cdf.table <- read.csv("./csv_data/facebook/work_cdf.csv")
############################# Define colors  ##################################
#COLORS
sn_color = "#021C02"
sn1 = "#1A361A"
sn2 = "#021C02"
dsn_color = "#B53131"
dsn1 = "#CF4F4F"
dsn2 = "#B53131"
opt_color = "#87C8E6"
opt1 = "#BEDCEB"
opt2 = "#87C8E6"
bt_color = "#555555"
bt1 = "#555555"
bt2 = "#555555"
###########################
clusters.table["abb"] <- revalue(clusters.table$project,
c("splaynet" = "sn",
"displaynet" = "dsn"))
clusters.table$abb <- factor(clusters.table$abb, levels = c("sn", "dsn"))
clusters.table %>% filter(
abb %in% c("dsn")) -> clusters.table
# Init Ggplot Base Plot
clusters.plot <- ggplot(clusters.table, aes(x = value, fill = abb)) +
geom_histogram(aes(y = ..count..), position = "dodge", binwidth = 1, alpha = 0.5) +
# Add mean line
geom_vline(aes(xintercept=mean(value)), linetype="dashed")
# Modify theme components -------------------------------------------
clusters.plot <- clusters.plot + theme(text = element_text(size = 20),
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
axis.title.x = element_text(size = 25),
axis.title.y = element_text(size = 25),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
legend.text = element_text(size = 20),
legend.title = element_blank(),
legend.position = "none",
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
clusters.plot <- clusters.plot +
labs(x = "#Clusters", y = expression(paste("#Rounds x", 10^4))) +
scale_fill_manual(values = c(sn_color, dsn_color)) +
scale_y_continuous(labels = function(x){paste0(x/10000)})
IMG_height = 15
IMG_width = 15
ggsave(filename = "./plots/facebook/clusters.pdf", units = "cm",
plot = clusters.plot, device = "pdf",  width = IMG_width, height = IMG_height, scale = 1.0)
setwd("/home/oaugusto/CBNet/PlotsScripts/ToN-bursty")
################################## Libraries ###################################
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(plyr)
# setup
options(scipen = 999)
theme_set(theme_bw())
############################# Reading tables  ##################################
total_work.table <- read.csv("./csv_data/bursty/total_work.csv")
makespan.table <-read.csv("./csv_data/bursty/total_time.csv")
clusters.table <-read.csv("./csv_data/bursty/cluster.csv")
throughput.table <-read.csv("./csv_data/bursty/throughput.csv")
work_cdf.table <- read.csv("./csv_data/bursty/work_cdf.csv")
############################# Define colors  ##################################
#COLORS
sn_color = "#021C02"
sn1 = "#1A361A"
sn2 = "#021C02"
dsn_color = "#B53131"
dsn1 = "#CF4F4F"
dsn2 = "#B53131"
opt_color = "#87C8E6"
opt1 = "#BEDCEB"
opt2 = "#87C8E6"
bt_color = "#555555"
bt1 = "#555555"
bt2 = "#555555"
clusters.table["abb"] <- revalue(clusters.table$project,
c("splaynet" = "sn",
"displaynet" = "dsn"))
clusters.table$abb <- factor(clusters.table$abb, levels = c("sn", "dsn"))
clusters.table %>% filter(
size %in% c(1024)) -> clusters.table
clusters.table %>% filter(
abb %in% c("dsn")) -> clusters.table
# Init Ggplot Base Plot
clusters.plot <- ggplot(clusters.table, aes(x = value, fill = abb)) +
geom_histogram(aes(y = ..count..), position = "dodge", binwidth = 1, alpha = 0.5) +
# Add mean line
geom_vline(aes(xintercept=mean(value)), linetype="dashed")
# Modify theme components -------------------------------------------
clusters.plot <- clusters.plot + theme(text = element_text(size = 20),
plot.title = element_blank(),
plot.subtitle = element_blank(),
plot.caption = element_blank(),
axis.title.x = element_text(size = 25),
axis.title.y = element_text(size = 25),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
legend.title = element_blank(),
legend.position = "none",
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
clusters.plot <- clusters.plot +
labs(x = "#Clusters", y = expression(paste("#Rounds x", 10^3))) +
scale_fill_manual(values = c(sn_color, dsn_color)) +
scale_y_continuous(breaks = seq(0, 16000, 4000), labels = function(x){paste0(x/1000)})
plot(clusters.plot)
IMG_height = 15
IMG_width = 15
ggsave(filename = "./plots/bursty/clusters.pdf", units = "cm",
plot = clusters.plot, device = "pdf",  width = IMG_width, height = IMG_height, scale = 1.0)
